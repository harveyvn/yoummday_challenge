"""add track id and artist id to track table

Revision ID: 41cd91daca68
Revises: 56905ce790aa
Create Date: 2025-07-07 22:19:41.319339

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '41cd91daca68'
down_revision: Union[str, Sequence[str], None] = '56905ce790aa'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('tracks', sa.Column('track_id', postgresql.UUID(as_uuid=True), nullable=False))
    op.add_column('tracks', sa.Column('artist_id', postgresql.UUID(as_uuid=True), nullable=True))
    op.alter_column('tracks', 'artist_name',
               existing_type=sa.TEXT(),
               nullable=True)
    op.drop_column('tracks', 'recording_msid')
    op.drop_column('tracks', 'artist_msid')
    op.drop_column('tracks', 'release_msid')
    op.drop_column('tracks', 'release_name')
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('tracks', sa.Column('release_name', sa.TEXT(), autoincrement=False, nullable=True))
    op.add_column('tracks', sa.Column('release_msid', postgresql.UUID(), autoincrement=False, nullable=True))
    op.add_column('tracks', sa.Column('artist_msid', postgresql.UUID(), autoincrement=False, nullable=False))
    op.add_column('tracks', sa.Column('recording_msid', postgresql.UUID(), autoincrement=False, nullable=False))
    op.alter_column('tracks', 'artist_name',
               existing_type=sa.TEXT(),
               nullable=False)
    op.drop_column('tracks', 'artist_id')
    op.drop_column('tracks', 'track_id')
    # ### end Alembic commands ###
